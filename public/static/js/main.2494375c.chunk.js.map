{"version":3,"sources":["components/Answers.js","App.js","serviceWorker.js","index.js"],"names":["AnswersQuery","gql","_templateObject","Answers","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","counterTeamA","counterTeamB","teamAName","teamBName","addClass","correctAnswer","incorrectAnswer","correctStore","flipCard","turnA","showCategories","categories","list","isChecked","showModal","checked","firstAnswerOrder","Math","floor","random","secondAnswerOrder","thirdAnswerOrder","fourthAnswerOrder","toggle","bind","assertThisInitialized","toggleChecks","wrongAnswer","scoreReset","modal","handleSubmit","check","submitCategories","resetCategories","reCheck","nullCheck","inherits","createClass","key","value","setState","console","log","event","preventDefault","elementA","elementB","array","number","parseInt","target","index","indexOf","splice","push","sort","a","b","_this2","fadeClass","flipCorrect","showCorrect","showIncorrect","modalOpen","showCat","react_default","createElement","className","react_apollo_browser_umd","query","variables","_ref","loading","error","data","refetch","questions","results","map","_ref2","correct_answer","incorrect_answers","question","category","join","he","decode","type","onClick","setTimeout","style","order","xmlns","viewBox","cx","cy","r","fill","d","onSubmit","name","ref","el","id","defaultChecked","onChange","htmlFor","Component","client","ApolloClient","uri","App","components_Answers","render","App_App","document","getElementById","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2494375c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n//Converts HTML code to readable\nimport he from 'he';\n\n//---------- GraphQL Query\nconst AnswersQuery = gql`\n  query Questions($categories: [Int]) {\n    questions(categories: $categories) {\n      results {\n        correct_answer\n        incorrect_answers\n        question\n        category\n      }\n    }\n  }\n`;\n\nexport class Answers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counterTeamA: 0,\n      counterTeamB: 0,\n      teamAName: 'Team A',\n      teamBName: 'Team B',\n      addClass: false,\n      correctAnswer: false,\n      incorrectAnswer: false,\n      correctStore: '',\n      flipCard: false,\n      turnA: true,\n      showCategories: false,\n      categories: [\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        22,\n        23,\n        24,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        32\n      ],\n      list: [\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        22,\n        23,\n        24,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        32\n      ],\n      isChecked: null,\n      showModal: false,\n      checked: true,\n      firstAnswerOrder: Math.floor(Math.random() * 10),\n      secondAnswerOrder: Math.floor(Math.random() * 10),\n      thirdAnswerOrder: Math.floor(Math.random() * 10),\n      fourthAnswerOrder: Math.floor(Math.random() * 10)\n    };\n    this.toggle = this.toggle.bind(this);\n    this.toggleChecks = this.toggleChecks.bind(this);\n    this.correctAnswer = this.correctAnswer.bind(this);\n    this.wrongAnswer = this.wrongAnswer.bind(this);\n    this.random = this.random.bind(this);\n    this.scoreReset = this.scoreReset.bind(this);\n    this.modal = this.modal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.check = this.check.bind(this);\n    this.submitCategories = this.submitCategories.bind(this);\n    this.resetCategories = this.resetCategories.bind(this);\n    this.reCheck = this.reCheck.bind(this);\n    this.nullCheck = this.nullCheck.bind(this);\n  }\n\n  //toggling state for visible objects\n  toggle() {\n    this.setState({\n      addClass: !this.state.addClass,\n      flipCard: !this.state.flipCard\n    });\n    console.log(this.state.categories);\n  }\n\n  //toggle modal\n  modal() {\n    this.setState({\n      showModal: !this.state.showModal\n    });\n    console.log(this.state.showModal);\n  }\n\n  //toggling state for visible objects and randomising\n  random() {\n    this.setState({\n      firstAnswerOrder: Math.floor(Math.random() * 10),\n      secondAnswerOrder: Math.floor(Math.random() * 10),\n      thirdAnswerOrder: Math.floor(Math.random() * 10),\n      fourthAnswerOrder: Math.floor(Math.random() * 10)\n    });\n  }\n\n  scoreReset() {\n    this.setState({\n      counterTeamA: 0,\n      counterTeamB: 0\n    });\n  }\n\n  //toggle off correct or incorrect\n  toggleChecks() {\n    this.setState({\n      correctAnswer: false,\n      incorrectAnswer: false\n    });\n  }\n\n  //Adding one to score and changing team state\n  correctAnswer() {\n    if (this.state.turnA) {\n      this.setState({\n        counterTeamA: this.state.counterTeamA + 1,\n        turnA: false\n      });\n    } else {\n      this.setState({\n        counterTeamB: this.state.counterTeamB + 1,\n        turnA: true\n      });\n    }\n    this.setState({ flipCard: !this.state.flipCard });\n    this.setState({ correctAnswer: !this.state.correctAnswer });\n  }\n\n  //changing team state\n  wrongAnswer() {\n    if (this.state.turnA) {\n      this.setState({\n        turnA: false\n      });\n    } else {\n      this.setState({\n        turnA: true\n      });\n    }\n    this.setState({ incorrectAnswer: !this.state.incorrectAnswer });\n  }\n\n  //handle form enter\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      teamAName: this.elementA.value,\n      teamBName: this.elementB.value,\n      showModal: !this.state.showModal\n    });\n  }\n\n  check(event) {\n    const array = this.state.list;\n    const number = parseInt(event.target.value);\n    const index = array.indexOf(number);\n    if (index > -1) {\n      console.log('uncheck');\n      array.splice(index, 1);\n    } else {\n      console.log('check');\n      array.push(number);\n    }\n    array.sort(function(a, b) {\n      return a - b;\n    });\n  }\n\n  submitCategories() {\n    const array = this.state.list;\n    this.state.categories.sort(function(a, b) {\n      return a - b;\n    });\n    this.state.categories = array;\n    this.setState({\n      showCategories: false\n    });\n  }\n\n  resetCategories() {\n    this.setState({\n      list: [\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        22,\n        23,\n        24,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        32\n      ],\n      categories: [\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        22,\n        23,\n        24,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        32\n      ]\n    });\n  }\n\n  reCheck() {\n    this.setState({\n      isChecked: true,\n      showCategories: true\n    });\n  }\n  nullCheck() {\n    this.setState({\n      isChecked: null\n    });\n  }\n\n  render() {\n    let fadeClass = ['answers-container'];\n    if (this.state.addClass) {\n      fadeClass.push('fadeOut');\n    }\n\n    let flipCorrect = ['flipcard'];\n    if (this.state.flipCard) {\n      flipCorrect.push('is-flipped');\n    }\n\n    let showCorrect = ['correct'];\n    if (!this.state.correctAnswer) {\n      showCorrect.push('hide');\n    }\n\n    let showIncorrect = ['incorrect'];\n    if (!this.state.incorrectAnswer) {\n      showIncorrect.push('hide');\n    }\n    let modalOpen = ['modal'];\n    if (!this.state.showModal) {\n      modalOpen.push('hide-modal');\n    }\n\n    let showCat = ['form-group'];\n    if (this.state.showCategories) {\n      showCat.push('show-categories');\n    }\n\n    const { categories } = this.state;\n\n    return (\n      <div className='trivia-container'>\n        <Query query={AnswersQuery} variables={{ categories }}>\n          {({ loading, error, data, refetch }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error</p>;\n            return data.questions.results.map(\n              ({ correct_answer, incorrect_answers, question, category }) => (\n                <div>\n                  <div className={fadeClass.join(' ')}>\n                    <div className='question' key={question}>\n                      <h2>-{category}</h2>\n                      <p>{he.decode(question)}</p>\n                    </div>\n                    <h2>-answers</h2>\n                  </div>\n                  <div className={flipCorrect.join(' ')}>\n                    <div className='flipcard'>\n                      <div className='flipcard__face flipcard__face--front'>\n                        <button\n                          key={correct_answer}\n                          type='button'\n                          onClick={() => {\n                            this.correctAnswer();\n                            this.toggle();\n                            setTimeout(refetch, 500);\n                          }}\n                          className='btn-primary correctanswer'\n                          style={{ order: this.state.firstAnswerOrder }}\n                        >\n                          {he.decode(correct_answer)}\n                        </button>\n                        <button\n                          key={incorrect_answers[0]}\n                          type='button'\n                          onClick={() => {\n                            this.setState({\n                              correctStore: correct_answer\n                            });\n                            this.toggle();\n                            this.wrongAnswer();\n                            setTimeout(refetch, 500);\n                          }}\n                          className='btn-primary'\n                          style={{ order: this.state.secondAnswerOrder }}\n                        >\n                          {he.decode(incorrect_answers[0])}\n                        </button>\n                        <button\n                          key={incorrect_answers[1]}\n                          type='button'\n                          onClick={() => {\n                            this.setState({\n                              correctStore: correct_answer\n                            });\n                            this.toggle();\n                            this.wrongAnswer();\n                            setTimeout(refetch, 500);\n                          }}\n                          className='btn-primary'\n                          style={{ order: this.state.thirdAnswerOrder }}\n                        >\n                          {he.decode(incorrect_answers[1])}\n                        </button>\n                        <button\n                          key={incorrect_answers[2]}\n                          type='button'\n                          onClick={() => {\n                            this.setState({\n                              correctStore: correct_answer\n                            });\n                            this.toggle();\n                            this.wrongAnswer();\n                            setTimeout(refetch, 500);\n                          }}\n                          className='btn-primary'\n                          style={{ order: this.state.fourthAnswerOrder }}\n                        >\n                          {he.decode(incorrect_answers[2])}\n                        </button>\n                      </div>\n                      <div className='flipcard__face flipcard__face--back'>\n                        <div className={showCorrect.join(' ')}>\n                          <h3>Correct!</h3>\n                          <svg\n                            className='checkmark'\n                            xmlns='http://www.w3.org/2000/svg'\n                            viewBox='0 0 52 52'\n                          >\n                            <circle\n                              className='checkmark__circle'\n                              cx='26'\n                              cy='26'\n                              r='25'\n                              fill='none'\n                            />\n                            <path\n                              className='checkmark__check'\n                              fill='none'\n                              d='M14.1 27.2l7.1 7.2 16.7-16.8'\n                            />\n                          </svg>\n                        </div>\n                        <div className={showIncorrect.join(' ')}>\n                          <h3>Incorrect: </h3>\n                          <p>\n                            {he.decode(this.state.correctStore)} was the right\n                            answer!\n                          </p>\n                          <svg\n                            className='exmark'\n                            xmlns='http://www.w3.org/2000/svg'\n                            viewBox='0 0 52 52'\n                          >\n                            <circle\n                              className='exmark__circle'\n                              cx='26'\n                              cy='26'\n                              r='25'\n                              fill='none'\n                            />\n                            <path\n                              className='checkmark__check'\n                              fill='none'\n                              d='M16 16 36 36 M36 16 16 36'\n                            />\n                          </svg>\n                        </div>\n                        <div>\n                          <button\n                            type='button'\n                            onClick={() => {\n                              setTimeout(this.random, 300);\n                              setTimeout(this.toggle, 500);\n                              setTimeout(this.toggleChecks, 900);\n                            }}\n                            className='flipbutton'\n                          >\n                            Next Question\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )\n            );\n          }}\n        </Query>\n\n        <div>\n          <div className='options'>\n            <button\n              onClick={() => {\n                this.modal();\n              }}\n            >\n              <i className='fas fa-cog' />\n            </button>\n          </div>\n          <div className={modalOpen.join(' ')}>\n            <div className='modal-content'>\n              <span className='close'>\n                <button\n                  onClick={() => {\n                    this.modal();\n                    this.submitCategories();\n                  }}\n                >\n                  &times;\n                </button>\n              </span>\n              <form onSubmit={this.handleSubmit}>\n                <label className='col-form-label col-form-label-sm'>\n                  Team Names\n                </label>\n                <input\n                  type='text'\n                  name='teamA'\n                  className='form-control form-control-sm'\n                  ref={el => (this.elementA = el)}\n                />\n                <input\n                  type='text'\n                  name='teamB'\n                  className='form-control form-control-sm'\n                  ref={el => (this.elementB = el)}\n                />\n                <input\n                  type='submit'\n                  value='Submit'\n                  className='btn btn-primary'\n                />\n              </form>\n              <button\n                className='score-reset btn btn-danger'\n                onClick={this.scoreReset}\n              >\n                Reset scores\n              </button>\n              <button\n                className='score-reset btn btn-info'\n                onClick={() => {\n                  this.resetCategories();\n                  this.reCheck();\n                  setTimeout(this.nullCheck);\n                }}\n              >\n                Select Categories\n              </button>\n\n              <div className={showCat.join(' ')}>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch0'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={9}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch0'\n                  >\n                    General Knowledge\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch1'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={10}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch1'\n                  >\n                    Books\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch2'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={11}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch2'\n                  >\n                    Films\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch3'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={12}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch3'\n                  >\n                    Music\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch4'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={13}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch4'\n                  >\n                    Musicals and Theatres\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch5'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={14}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch5'\n                  >\n                    TV\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch6'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={15}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch6'\n                  >\n                    Video Games\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch7'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={16}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch7'\n                  >\n                    Board Games\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch8'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={17}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch8'\n                  >\n                    Science and Nature\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch9'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={18}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch9'\n                  >\n                    Science: Computers\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch10'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={19}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch10'\n                  >\n                    Science: Mathematics\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch11'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={20}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch11'\n                  >\n                    Mythology\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch12'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={21}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch12'\n                  >\n                    Sports\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch13'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={22}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch13'\n                  >\n                    Geography\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch14'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={23}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch14'\n                  >\n                    History\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch15'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={24}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch15'\n                  >\n                    Politics\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch16'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={25}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch16'\n                  >\n                    Art\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch17'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={26}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch17'\n                  >\n                    Celebrities\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch18'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={27}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch18'\n                  >\n                    Animals\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch19'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={28}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch19'\n                  >\n                    Vehicles\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch20'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={29}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch20'\n                  >\n                    Comics\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch21'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={30}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch21'\n                  >\n                    Science: Gadgets\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch22'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={31}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch22'\n                  >\n                    Anime\n                  </label>\n                </div>\n                <div className='custom-control custom-switch'>\n                  <input\n                    type='checkbox'\n                    className='custom-control-input'\n                    id='customSwitch23'\n                    defaultChecked\n                    checked={this.state.isChecked}\n                    onChange={this.check}\n                    value={32}\n                  />\n                  <label\n                    className='custom-control-label'\n                    htmlFor='customSwitch23'\n                  >\n                    Cartoons\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='score-container'>\n          <div className='score'>\n            <h2>{this.state.teamAName}</h2>\n            {this.state.counterTeamA}\n          </div>\n          <div className='score'>\n            <h2>{this.state.teamBName}</h2>\n            {this.state.counterTeamB}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Answers;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport './App.css';\nimport Answers from './components/Answers';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <div className='App'>\n      <h1 className='title'>A SIMPLE TRIVIA GAME</h1>\n    </div>\n    <Answers />\n  </ApolloProvider>\n);\n\nrender(<App />, document.getElementById('root'));\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}